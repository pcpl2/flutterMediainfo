name: CI_Build_Example

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  flutter_version: "3.3.9"

jobs:
  tests:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
        - os: windows-2019
          name: Windows 2019
          build_target: windows
          build_path: build\windows\runner\Release
          target: Windows
        - os: windows-2022
          name: Windows 2022
          build_target: windows
          build_path: build\windows\runner\Release
          target: Windows
        - os: ubuntu-20.04
          name: Ubuntu 20.04
          build_target: linux
          build_path: build/linux/x64/release/bundle
          target: Linux
        - os: ubuntu-22.04
          name: Ubuntu 22.04
          build_target: linux
          build_path: build/linux/x64/release/bundle
          target: Linux
        - os: macos-12
          name: macOS 12
          build_target: macos
          build_path: build/macos/Build/Products/Release
          target: macOS
        - os: macos-11
          name: macOS 11
          build_target: macos
          build_path: build/macos/Build/Products/Release
          target: macOS
        - os: macos-10.15
          name: macOS 10.15
          build_target: macos
          build_path: build/macos/Build/Products/Release
          target: macOS
    steps:
      - name: Checkout the code
        uses: actions/checkout@v3.1.0
        
      - name: Setup the flutter environment.
        uses: subosito/flutter-action@v2.8.0
        with:
          flutter-version: ${{ env.flutter_version }}
          channel: 'stable'
          cache: true
          cache-key: flutter
          cache-path: ${{ runner.tool_cache }}/flutter

      - name: Enable desktop support ubuntu
        run: | 
          flutter config --enable-linux-desktop
          flutter config --enable-windows-desktop
          flutter config --enable-macos-desktop

      - if: matrix.target == 'Linux'
        name: Patch for linux build
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev libx11-dev pkg-config cmake ninja-build libblkid-dev liblzma-dev clang
          sudo ldconfig
          flutter doctor

      - name: Restore packages
        run: flutter pub get

      - name: Analyze
        run: flutter analyze
      
      - if: runner.os == 'macOS' || runner.os == 'Linux'
        name: Build native utils
        run: |
          cd nativeUtils
          mkdir cmake
          cd cmake
          cmake ..
          make install

      - name: Run tests
        run: flutter test --coverage

      - name: Build example
        run: | 
          cd example
          flutter build -v ${{ matrix.build_target }} --release
      
      - name: Upload generated application to the artifacts.
        uses: actions/upload-artifact@v3.1.1
        with:
          name: FlutterMediaInfo Example ${{ matrix.build_target }}
          path: example/${{ matrix.build_path }}
          retention-days: 5
